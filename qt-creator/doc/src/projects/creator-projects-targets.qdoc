/****************************************************************************
**
** Copyright (c) 2012 Digia Plc and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/legal
**
** This file is part of Qt Creator
**
**
** GNU Free Documentation License
**
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of this
** file.
**
**
****************************************************************************/

// **********************************************************************
// NOTE: the sections are not ordered by their logical order to avoid
// reshuffling the file each time the index order changes (i.e., often).
// Run the fixnavi.pl script to adjust the links to the index order.
// **********************************************************************

/*!
    \contentspage index.html
    \previouspage creator-build-settings.html
    \page creator-targets.html
    \nextpage creator-project-qmake.html

    \title Adding Kits

    \QC groups settings used for building and running projects as kits
    to make cross-platform and cross-configuration
    development easier. Each kit consists of a set of values that define one
    environment, such as a device, compiler, Qt version, and debugger command
    to use, and some metadata, such as an icon and a name for the kit. Once
    you have defined kits, you can select them to build and run projects.

    \QC supports development for the desktop and for the following types of
    devices:

    \list

        \o  Android Device

        \o  Generic Linux Device

        \o  Maemo5/Fremantle Device

        \o  MeeGo 1.2 Harmattan Device

        \o  QNX Device

    \endlist

    To add kits:

    \list 1

        \o  Select \gui Tools > \gui Options > \gui {Build & Run} > \gui Kits
            > \gui Add.

            \image qtcreator-targets.png

            To clone the selected kit, select \gui Clone.

        \o  In the \gui Name column, double-click the kit name to change it.

        \o  In the \gui{Device type} field, select the type of the device.

            Double-click the icon next to the field to select the image that is
            displayed in the kit selector for this kit. You can use any
            image in a supported file format (for example, PNG). The image is
            scaled to the size 64x64 pixels. For example, using the compiler
            logo as an icon allows you to easily see, which compiler is used to
            build the project for the selected kit.

        \o  In the \gui Device field, select a device.

        \o  In the \gui Sysroot field, specify the directory where the device
            image is located. If you are not cross-compiling, leave this field
            empty.

        \o  In the \gui {Compiler} field, select the compiler required
            to build the project. You can add compilers to the list
            if they are installed on the development PC, but were not detected
            automatically. For more information, see \l{Adding Compilers}.

        \o  In the \gui Debugger field, select \gui Manage to automatically
            detect a suitable debugger or to edit the currently selected
            debugger. For more information, see \l{Selecting the Debugger}.

        \o  In the \gui {Qt version} field, select the Qt version to use for
            building the project. You can add Qt versions to the list if they
            are installed on the development PC, but were not detected
            automatically. For more information, see \l{Adding Qt Versions}.

            \QC checks the directories listed in the \c{PATH} environment
            variable for the qmake executable. If a qmake executable is found,
            it is referred to as \bold{Qt in PATH} and selected as the Qt
            version to use for the \gui Desktop kit that is created by default.

        \o  In the \gui {Qt mkspec} field, specify build instructions for qmake.
            If you leave this field empty, the default value is used.

    \endlist

    \section1 Selecting the Debugger

    To automatically detect a suitable debugger in the \gui Debugger field,
    select \gui Manage > \gui {Auto-detect}. This should work for the CDB engine
    and for the GDB engine for local debugging on Linux or Mac OS.

    To edit the selected debugger, select \gui Manage > \gui Edit. In the
    \gui {Debugger for} dialog, specify the type of debugger to use
    (\gui {GDB Engine} or \gui {CDB Engine}) and the path to the debugger
    binary.

    For the \gui {CDB Engine} (Windows only), specify the path to the Windows
    Console Debugger executable.

    For the \gui {GDB Engine}, specify the path to the GDB executable. The
    executable must be built with Python scripting support enabled
    (except when debugging on Mac OS). The options you have depend on the
    development and target platform:

    \list

        \o  For debugging on embedded devices using a different ABI, you must
            provide a special executable.

        \o  For debugging on Windows using MinGW, select a Windows executable of
            GDB with Python scripting enabled. You can download it from
            \l{http://builds.qt-project.org/job/gdb-windows}.

    \endlist

*/
